#!/usr/local/bin/zsh
rcpath="$HOME/go/src/github.com/vankichi/dotfiles"
zpath="/usr/bin/zsh"
container_name="dev"
image_name="vankichi/dev:latest"

function dockerrm {
    docker container stop $(docker container ls -aq)
    docker ps -aq | xargs docker rm -f
    docker container prune -f
    docker images -aq | xargs docker rmi -f
    docker image prune -a
    docker volume prune -f
    docker network prune -f
    docker system prune -a
}

alias dockerrm="dockerrm"

alias vmove="cd $rcpath"

alias vbuild="vmove&&docker build --pull=true --file=$rcpath/Dockerfile -t vankichi/dev:latest $rcpath"

function devrun {
    port_range="7000-9300"
    privileged=true
    tz_path="/usr/share/zoneinfo/Japan"
    font_dir="/System/Library/Fonts"
    docker_daemon="$HOME/Library/Containers/com.docker.helper/Data/.docker/daemon.json"
    docker_config="$HOME/Library/Containers/com.docker.helper/Data/.docker/config.json"
    docker_sock="/var/run/docker.sock"
    container_root="/root"
    container_goroot="$container_root/go"
    case "$(uname -s)" in
        Darwin)
            echo 'Docker on macOS start'
            docker run \
                --cap-add=ALL \
                --name $container_name \
                --restart always \
                --privileged=$privileged \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -p $port_range:$port_range \
                -v $HOME/.docker/daemon.json:$container_root/.docker/daemon.json \
                -v $HOME/.kube:$container_root/.kube \
                -v $HOME/.netrc:$container_root/.netrc \
                -v $HOME/.ssh:$container_root/.ssh \
                -v $HOME/Documents:$container_root/Documents \
                -v $HOME/Downloads:$container_root/Downloads \
                -v $HOME/go/src:/go/src:cached \
                -v $docker_config:/etc/docker/config.json \
                -v $docker_daemon:/etc/docker/daemon.json \
                -v $font_dir:/usr/share/fonts:ro \
                -v $rcpath/coc-settings.json:$container_root/.config/nvim/coc-settings.json \
                -v $rcpath/editorconfig:$container_root/.editorconfig \
                -v $rcpath/gitconfig:$container_root/.gitconfig \
                -v $rcpath/gitignore:$container_root/.gitignore \
                -v $rcpath/init.vim:$container_root/.config/nvim/init.vim \
                -v $rcpath/monokai.vim:$container_root/.config/nvim/colors/monokai.vim \
                -v $rcpath/tmux.conf:$container_root/.tmux.conf \
                -v $rcpath/zshrc:$container_root/.zshrc \
                -v $tz_path:/etc/localtime:ro \
                -v $docker_sock:$docker_sock \
                -dit $image_name
            ;;

        Linux)
            echo 'Docker on Linux start'
            # privileged=false
            # privileged=false
            font_dir="/usr/share/fonts"
            tz_path="/etc/timezone"
            docker_daemon="/etc/docker/daemon.json"
            #docker_config="/etc/docker/config.json"
            ;;

        CYGWIN*|MINGW32*|MSYS*)
            echo 'MS Windows is not ready for this environment'
            ;;

        *)
            echo 'other OS'
            ;;
    esac

    docker exec -d $container_name $zpath nvup
}

alias devrun="devrun"

alias devin="docker exec -it $container_name $zpath"

function devkill {
    docker update --restart=no $container_name \
        && docker container stop $(docker container ls -aq) \
        && docker container stop $(docker ps -a -q) \
        && docker ps -aq | xargs docker rm -f \
        && docker container prune -f
}

alias devkill="devkill"

alias devres="devkill && devrun"
